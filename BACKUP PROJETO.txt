<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Trello List Exporter</title>
    <link href="https://fonts.googleapis.com/css2" rel="stylesheet">
     <style>
        body {
            font-family: 'Roboto', sans-serif;
            background-color: #f4f4f4;
            display:;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }

        #trelloListWidget {
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            display: flex;
            align-items: center;
        }

        #listSelector {
            padding: 10px;
            margin-right: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            background-color: #fff;
            transition: all 0.3s ease;
        }

        #listSelector:focus {
            border-color: #53A4D1;
        }

        .exportButton {
            padding: 10px 15px;
            border: none;
            border-radius: 5px;
            background-image: linear-gradient(to right, #53A4D1, #006494);
            color: white;
            cursor: pointer;
            transition: all 0.8s ease;
        }

        .exportButton:hover {
            background-image: linear-gradient(to right, #006494, #53A4D1);
        }

        /* Estilos para telas menores (responsividade) */
        @media (max-width: 767px) {
            #trelloListWidget {
                flex-direction: column;
                align-items: stretch;
            }

            #listSelector {
                margin-bottom: 10px;
                margin-right: 0;
            }

            .exportButton {
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <div id="trelloListWidget">
        <select id="listSelector">
            <!-- As opções serão preenchidas dinamicamente pelo JavaScript -->
        </select>
        <button class="exportButton" id="exportPdf">Exportar para PDF</button>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.68/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.68/vfs_fonts.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
    let data;

    fetch('http://localhost:3000/board-data')
        .then(response => response.json())
        .then(boardData => {
            data = boardData;
            const listSelector = document.getElementById('listSelector');
            data.forEach(list => {
                const option = document.createElement('option');
                option.value = list.listId;
                option.textContent = list.listName;
                listSelector.appendChild(option);
            });
        })
        .catch(error => console.error('Erro ao carregar dados:', error));

    document.getElementById('exportPdf').addEventListener('click', function() {
        exportCards('pdf');
    });

    function exportCards(format) {
        const selectedListId = document.getElementById('listSelector').value;
        if (!selectedListId) {
            alert('Por favor, selecione uma lista para exportar.');
            return;
        }

        const selectedList = data.find(list => list.listId === selectedListId);

        if (!selectedList) {
            alert('Lista não encontrada.');
            return;
        }

        const selectedListName = selectedList.listName; // Nome da lista selecionada

        const selectedListCards = selectedList.cards;

        const docDefinition = {
            content: selectedListCards.map(card => [
                { text: card.cardTitle, style: 'header' },
                card.cardDescription
            ]),
            styles: {
                header: {
                    fontSize: 18,
                    bold: true,
                    margin: [0, 10, 0, 5]
                }
            }
        };

        // Nome do arquivo PDF com base no nome da lista selecionada
        const fileName = `${selectedListName}.pdf`;

        // Gere o PDF e defina o nome do arquivo
        pdfMake.createPdf(docDefinition).download(fileName);
    }
});


    </script>
</body>
</html>
